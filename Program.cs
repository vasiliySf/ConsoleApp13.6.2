namespace HashSetTest;

class Program
{
    static void Main()
    {
        string text;
        text = "Программистам из России стали чаще отказывать в выплатах за выполненные по контракту работы. " +
               "Газете стало известно о десятках таких случаев. В одном из них российская ИТ-компания не перечислила исполнителю " +
               "около 30 млн руб. ИТ-эксперты уверены, что такая практика сложилась давно, а в условиях кризиса она лишь укрепилась. " +
               "Российские программисты столкнулись с системной невыплатой гонораров от своих клиентов. Об этом Газете рассказали в юридической компании RTM Group. " +
               "По данным специалистов этой организации, за последние два месяца выявлено несколько десятков таких случаев. " +
               "RTM Group фиксирует рост «кидалова» в отношении программистов большими компаниями, заказывающими у них разработку ПО на аутсорсинге», — заявили в пресс - службе. " +
               "Пострадавшие — юридические лица, которые предоставляют услуги по разработке ПО. Они обращаются к специалистам по судебным спорам в области ИТ, чтобы подать в суд и возместить убытки», — сообщили в RTM Group. " +
               "Пострадавшие утверждают, что компании - заказчики скрывают доказательства проведенных работ. " +
               "Специалисты RTM Group выделили две основные причины, по которым разработчикам стали чаще отказывать в выплате. " +
               "Во-первых, из-за ухода планировщика Jira из России и проблем с безопасностью у GitHub клиенты все чаще уговаривают программистов на аутсорсе вести работы в закрытых системах компаний. " +
               "Jira — система для отслеживания ошибок, которую можно применять для управления проектами. Является своеобразным журналом, в котором фиксируются все действия каждого из разработчиков. GitHub — сервис в интернете для размещения ИТ-проектов и их совместной разработки программистами из разных компаний и стран мира. " +
               "Оба этих иностранных проекта позволяли программистам иметь на руках доказательства своей причастности к той или иной разработке. Сейчас же заказчики просят их отказываться от Jira и GitHub в пользу своих внутренних аналогов. В этом случае разработчики лишаются контроля над своими проектами, а вместе с тем и возможности доказать свое авторство. " +
               "Во-вторых, у компаний, которые пользуются услугами аутсорсеров, наметились проблемы с бюджетами. Они пытаются любыми способами урезать расходы, иногда отказываясь платить сторонним компаниям, — сообщили в RTM Group. ";

        try
        {


            var noPunctuationText = new string(text.Where(c => !char.IsPunctuation(c)).ToArray());

            string[] texts = noPunctuationText.Split(" ");//массив слов

            HashSet<string> hSet = new HashSet<string>(texts);//уникальный массив слов

            var items = new Dictionary<string, int>();

            int index = -1;
            int value;
            foreach (string s in hSet) //проходим по уникальному массиву
            {
                value = 0;

                index = Array.IndexOf(texts, s);//поиск слова в массиве texts
                while (index > 0)
                {
                    value++;
                    index = Array.IndexOf(texts, s, ++index); //поиск слова дальше в массиве texts
                }

                if (value > 0)
                {
                    items.Add(s, value); //заполняем словарь слово и количество в массиве texts
                    value = 0;
                }
            }

            items = items.Where(x => x.Key.Length > 3).ToDictionary(x => x.Key, x => x.Value);//убираем предлоги и пробелы (длина больше 3)

            var sorteditems = items.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);//сортируем по количеству слов по убыванию

            int i = 0;
            foreach (var c in sorteditems)
            {
                Console.WriteLine("Слово " + c.Key + " количество " + c.Value);
                i++;
                if (i > 9)
                    break;
            }
            Console.ReadKey();

        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
}